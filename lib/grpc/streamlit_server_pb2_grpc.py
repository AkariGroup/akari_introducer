# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import streamlit_server_pb2 as streamlit__server__pb2


class StreamlitServerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendUrl = channel.unary_unary(
                '/streamlit_server.StreamlitServerService/SendUrl',
                request_serializer=streamlit__server__pb2.SendUrlRequest.SerializeToString,
                response_deserializer=streamlit__server__pb2.SendUrlReply.FromString,
                )


class StreamlitServerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendUrl(self, request, context):
        """新しいURLを送信
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StreamlitServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.SendUrl,
                    request_deserializer=streamlit__server__pb2.SendUrlRequest.FromString,
                    response_serializer=streamlit__server__pb2.SendUrlReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'streamlit_server.StreamlitServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StreamlitServerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/streamlit_server.StreamlitServerService/SendUrl',
            streamlit__server__pb2.SendUrlRequest.SerializeToString,
            streamlit__server__pb2.SendUrlReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
